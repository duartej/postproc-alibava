<?xml version="1.0" encoding="us-ascii"?>
<!-- ?xml-stylesheet type="text/xsl" href="http://ilcsoft.desy.de/marlin/marlin.xsl"? -->
<!-- ?xml-stylesheet type="text/xsl" href="marlin.xsl"? -->

<!--##########################################
    #                                        #
    #     Steering file for marlin created   #
    #     by alibavaSkifftools               #
    #                                        #
    ##########################################-->

<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">
    <execute>
      <processor name="AIDA"/>
      <processor name="Mimosa26EUTelAutoPedestalNoiseProcessor"/>
      <processor name="Filter"/>
      <processor name="FilterHisto"/>
      <processor name="LoadHotPixelDB"/>
      <processor name="HitMakerM26"/>
      <processor name="PreAligner"/> 
      <processor name="Correlator"/> 
      <processor name="Save"/>
      <processor name="MyEUTelUtilityPrintEventNumber"/>
   </execute>

   <global>
      <parameter name="LCIOInputFiles">@INPUT_FILENAMES@ </parameter>
      <parameter name="GearXMLFile" value="@GEAR_FILE@.xml"/>
      <parameter name="MaxRecordNumber" value="9999999"/>
      <parameter name="SkipNEvents" value="0"/>
      <parameter name="SupressCheck" value="false"/>
      <parameter name="Verbosity" value="WARNING"/>
   </global>

   <processor name="AIDA" type="AIDAProcessor">
       <!--Processor that handles AIDA files. Creates on directory 
            per processor.  Processors only need to create and fill 
            the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
       <!-- compression of output file 0: false >0: true (default) -->
       <parameter name="Compress" type="int" value="1"/>
       <!-- filename without extension-->
       <parameter name="FileName" type="string" value="@ROOT_FILENAME@_@RUN_NUMBER@"/>
       <!-- type of output file root (default) or xml )-->
       <parameter name="FileType" type="string" value="root"/>
       <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
       <!--parameter name="Verbosity" type="string" value=""/-->
  </processor>
  
  <processor name="Mimosa26EUTelAutoPedestalNoiseProcessor" type="EUTelAutoPedestalNoiseProcessor">
       <!--EUTelAutoPedestalNoiseProcessor produces initial 
           pedestal / noise / status with user provided values-->
       <!--Noise local collection-->
       <parameter name="NoiseCollectionName" type="string" lcioOutType="TrackerData"> m26_noise </parameter>
       <!--Pedestal local collection-->
       <parameter name="PedestalCollectionName" type="string" lcioOutType="TrackerData"> m26_pedestal </parameter>
       <!--Pixel status collection-->
       <parameter name="StatusCollectionName" type="string" lcioOutType="TrackerRawData"> m26_status </parameter>
       <!--The initial value of noise (one value for detector)-->
       <parameter name="InitNoiseValue" type="FloatVec">  1 1 1 1 1 </parameter>
       <!--The initial value of pedestal (one value for detector)-->
       <parameter name="InitPedestalValue" type="FloatVec">  0 0 0 0 0 </parameter>
       <!--The maximum pixel along x (default 255, one value per detector)-->
       <parameter name="MaxXVector" type="IntVec"> 1151 1151 1151 1151 1151 </parameter>
       <!--The maximum pixel along y (default 255, one value per detector)-->
       <parameter name="MaxYVector" type="IntVec"> 575 575 575 575 575 </parameter>
       <!--The minimum pixel along x (default 0, one value per detector)-->
       <parameter name="MinXVector" type="IntVec"> 0 0 0 0 0 </parameter>
       <!--The minimum pixel along y (default 0, one value per detector)-->
       <parameter name="MinYVector" type="IntVec">  0 0 0 0 0 </parameter>
       <!--The sensorID for the generated collection (one per detector)-->
       <parameter name="SensorIDVec" type="IntVec"> 0 1 2 3 4  </parameter>
       <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
       <!--parameter name="Verbosity" type="string" value=""/-->
   </processor>

   <processor name="Filter" type="EUTelClusterFilter">
       <!--EUTelClusterFilter is a very powerful tool. It allows to 
            select among an input collection of TrackerPulse
            only the clusters fulfilling a certain set of selection criteria.
            The user can modify the switch on and off each selection cut and
            set the proper value for that via the processor parameter.-->
       <!--This is the input Tracker Pulse collection that should be filtered-->
       <parameter name="InputPulseCollectionName" type="string" lcioInType="TrackerPulse"> cluster_m26_free </parameter>
       <!--This is the name of the noise collection.
            The presence of this collection in the event is allowing 
            all the noise based selection cuts-->
       <parameter name="NoiseCollectionName" type="string" lcioInType="TrackerData"> m26_noise </parameter>
       <!--This is the name of the status collection. The presence of this
            collection in the event is allowing all the noise based selection cuts-->
       <parameter name="StatusCollectionName" type="string" lcioInType="TrackerRawData"> m26_status </parameter>
       <!--This is the output Tracker Pulse collection containing the filtered clusters-->
       <parameter name="OutputPulseCollectionName" type="string" lcioOutType="TrackerPulse"> filtered_cluster_m26 </parameter>
       <!--This is the minimum allowed total charge in to a cluster. 
            One floating point number for each sensor in the telescope-->
       <parameter name="ClusterMinTotalCharge" type="FloatVec">0 0 0 0 0 </parameter>
       <!--This is the minimum charge that a cluster of N pixels has to have. 
            The first figure has to be the number of pixels to consider in the cluster, 
            then one float number for each sensor.-->
       <parameter name="ClusterNMinCharge" type="FloatVec"> 0 0 0 0 0 </parameter>
       <!--This is the minimum SNR that a cluster of N pixels has to have. 
            The first figure has to be the number of pixels to consider in the cluster, 
            then one float number for each sensor. Setting N = 0 is enough to disable the cut.-->
       <parameter name="ClusterNMinSNR" type="FloatVec"> 0 0 0 0 0 </parameter>
       <!--This is the minimum charge that a cluster of N times N pixels has to have. 
            The first figure is the subcluster size in pixels (odd number), then one 
            floating number for each planes. To switch this selection off, set all numbers to zero.-->
       <parameter name="ClusterNxNMinCharge" type="FloatVec"> 0 0 0 0 0 </parameter>
       <!--This is the minimum SNR that a cluster of N times N pixels has to have. T
            The first figure is the subcluster size in pixels (odd number), then one
            floating number for each planes. To switch this selection off, set at least 
            the first number to zero.-->
       <parameter name="ClusterNxNMinSNR" type="FloatVec"> 0 0 0 0 0 </parameter>
       <!--This is the required quality for the cluster. One integer number for each 
            detector according to ClusterQuality. Put a negative number to disable the cut-->
       <parameter name="ClusterQuality" type="IntVec"> -1 -1 -1 -1 -1 </parameter>
       <!--This is a cut on the number of hit pixels inside the digital fixed frame 
            cluster algorithm. One cut for each sensor plane.-->
       <parameter name="DFFNumberOfHits" type="IntVec"> 0 0 0 0 0</parameter>
       <!--Define here ROI's. The first number (integer) is the detector ID. The other 
            four float are xBotLeft  yBotLeft xTopRight yTopRight. To disable it, just 
            put a negative number as detector ID.-->
       <parameter name="OutsideRegion" type="FloatVec"> -1 10 10 40 40 </parameter>
       <!--This is maximum allowed cluster noise. One floating number for each detector. 
            Write a negative number to disable the cut-->
       <parameter name="MaxClusterNoise" type="FloatVec"> -1 -1 -1 -1 -1 </parameter>
       <!--This is the maximum allowed number of cluster per plane. 
            One integer number for each detector. Write a negative number to disable the cut-->
       <parameter name="MaxClusterPerPlane" type="IntVec"> 100 100 100 100 100 </parameter>
       <!--This is the minimum required number of cluster per plane. One integer number 
       for each detector. Write 0 to disable the cut-->
       <parameter name="MinClusterPerPlane" type="IntVec"> 0 0 0 0 0</parameter>
       <!--This is the minimum allow total cluster SNR. One floating number for each 
            detector. Write 0 to disable the cut-->
       <parameter name="MinTotalClusterSNR" type="FloatVec"> 0 0 0 0 0</parameter>
       <!--Define here ROI's. The first number (integer) is the detector ID. 
            The other four float are xBotLeft  yBotLeft xTopRight yTopRight.
            To disable it, just put a negative number as detector ID.-->
       <parameter name="InsideRegion" type="FloatVec"> -1 10 10 40 40 </parameter>
       <!--parameter name="InsideRegion" type="FloatVec"> 0 #ROICut# </parameter>
       <parameter name="InsideRegion" type="FloatVec"> 1 #ROICut# </parameter>
       <parameter name="InsideRegion" type="FloatVec"> 2 #ROICut# </parameter>
       <parameter name="InsideRegion" type="FloatVec"> 3 #ROICut# </parameter>
       <parameter name="InsideRegion" type="FloatVec"> 4 #ROICut# </parameter>
       <parameter name="InsideRegion" type="FloatVec"> 5 #ROICut# </parameter-->
       <!--Setting this to true will select only events h#aving the same number 
       of hits for each plane.-->
       <parameter name="SameNumberOfHits" type="bool" value="false"/>
       <!--This is the minimum allowed charge that the seed pixel of a cluster has to have. 
            One floating number for each detector-->
       <parameter name="SeedMinCharge" type="FloatVec"> 0 0 0 0 0 </parameter>
       <!--This is the minimum allowed SNR that the seed pixel of a cluster has to have.
            One floating number for each detector. Set to 0 to disable-->
       <parameter name="SeedMinSNR" type="FloatVec"> 0 0 0 0 0 </parameter>
       <!--If true, a SkipEventException is thrown if after selection
            there are no cluster left.-->
       <parameter name="SkipEmptyEvent" type="bool" value="false"/>
       <!--parameter name="SkipEmptyEvent" type="bool" value="true"/-->
       <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
       <!--parameter name="Verbosity" type="string" value=""/-->
   </processor>

   <processor name="FilterHisto" type="EUTelHistogramMaker">
       <!--EUTelHistogramMaker fills reference and control histograms-->
       <!--The name of the noise collections-->
       <parameter name="NoiseCollectionName" type="string" lcioInType="TrackerData"> m26_noise </parameter>
       <!--Input tracker pulse collection-->
       <parameter name="PulseCollectionName" type="string" lcioInType="TrackerPulse"> cluster_m26_free </parameter>
       <!--The name of the status collections.-->
       <parameter name="StatusCollectionName" type="string" lcioInType="TrackerRawData"> m26_status </parameter>
       <!--The list of cluster N to be filled.For example 7 means filling the cluster spectra with the 7 most significant pixels-->
       <!--parameter name="ClusterN" type="IntVec"> 4 9 14 19 25 </parameter-->
       <!--The list of cluster NxN to be filled.For example 3 means filling the 3x3 histogram spectrum-->
       <!--parameter name="ClusterNxN" type="IntVec"> 3 5 </parameter-->  
       <!--This is the name of the histogram information file-->
       <parameter name="HistoInfoFileName" type="string" value="@CURRENT_WORKING_DIR@/histoinfo_telescope.xml"/>
       <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
       <!--parameter name="Verbosity" type="string" value=""/-->
   </processor>
   
   <processor name="LoadHotPixelDB" type="ConditionsProcessor">
      <!--ConditionsProcessor provides access to conditions data transparently
           from LCIO files or a databases, using LCCD-->
      <!--Initialization of a conditions database handler-->
      <!--parameter name="DBCondHandler" type="StringVec">conditionsName /lccd/myfolder HEAD  </parameter-->
      <!--Initialization of a conditions db file handler-->
      <!--parameter name="DBFileHandler" type="StringVec">conditionsName conditions.slcio collectionName  </parameter-->
      <!--Initialization string for conditions database-->
      <parameter name="DBInit" type="string">localhost:lccd_test:calvin:hobbes </parameter>
      <!--Initialization of a data file handler-->
      <!--parameter name="DataFileHandler" type="StringVec">conditionsName  </parameter-->
      <!--Initialization of a simple conditions file handler-->
      <parameter name="SimpleFileHandler" type="StringVec"> hotpixel_m26 @CURRENT_WORKING_DIR@/telescope-hotpixel_run@RUN_NUMBER@.slcio hotpixel_m26  </parameter>
      <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
      <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
  </processor>

  <processor name="HitMakerM26" type="EUTelProcessorHitMaker">
      <!--EUTelProcessorHitMaker is responsible to translate cluster centers 
           from the local frame of reference to the external frame of reference
           using the GEAR geometry description-->
      <!--Hit coordinates are calculated in local reference frame of sensor-->
      <parameter name="EnableLocalCoordidates" type="bool"> true </parameter>
      <!--Cluster (pulse) collection name-->
      <parameter name="PulseCollectionName" type="string" lcioInType="TrackerPulse"> filtered_cluster_m26 </parameter>
      <!--Hit (output) collection name-->
      <parameter name="HitCollectionName" type="string" lcioOutType="TrackerHit"> telescope_hit </parameter>
      <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
      <!--parameter name="Verbosity" type="string">MESSAGE </parameter-->
  </processor>
  
  <processor name="PreAligner" type="EUTelPreAlign">
      <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> telescope_hit </parameter>
      <parameter name="AlignmentConstantLCIOFile" type="string"> @RUN_NUMBER@-telescopeOnly-prealign-db.slcio </parameter>
      <parameter name="UseReferenceCollection" type="bool" value="false"/>
  </processor>
  
  <processor name="Correlator" type="EUTelCorrelator">
      <!--EUTelCorrelator fills histograms with correlation plots-->
      <!--Name of histogram info xml file-->
      <parameter name="HistogramInfoFilename" type="string"> @CURRENT_WORKING_DIR@/histoinfo_telescope.xml</parameter>
      <!--Hit collection name-->
      <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> telescope_hit </parameter>
      <!-- -->
      <parameter name="DumpOffset" type="bool" > false </parameter>
      <parameter name="UseReferenceCollection" type="bool" value="false"/>
  </processor>

  <processor name="Save" type="EUTelOutputProcessor">
      <!--Writes the current event to the specified LCIO outputfile. 
         Eventually it adds a EORE at the of the file if it 
         was missing Needs to be the last ActiveProcessor.-->
      <!--drops the named collections from the event-->
      <parameter name="DropCollectionNames" type="StringVec">zsdata_m26 zsdata cluster_m26 filtered_cluster_m26 </parameter>
      <!-- name of output file -->
      <parameter name="LCIOOutputFile" type="string" value="@OUTPUT_FILENAME@"/>
      <!--write mode for output file:  WRITE_APPEND or WRITE_NEW-->
      <parameter name="LCIOWriteMode" type="string" value="WRITE_NEW"/>
      <!--Set it to true to remove intermediate EORE in merged runs-->
      <parameter name="SkipIntermediateEORE" type="bool" value="true"/>
  </processor>

  <processor name="MyEUTelUtilityPrintEventNumber" type="EUTelUtilityPrintEventNumber">
      <!--EUTelUtilityPrintEventNumber prints event number to screen depending on the verbosity level-->
      <!--Print event number for every n-th event-->
      <parameter name="EveryNEvents" type="int" value="2000"/>
      <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
      <!--parameter name="Verbosity" type="string" value=""/-->
      <!--print the event timestamp as read from LCIO-->
      <!--parameter name="printTimestamp" type="bool" value="false"/-->
  </processor>
</marlin>
